name: wasip1/wasm
on:
  push:
    branches:
      - 'master'
    paths:
      - 'action.yml'
      - '.github/workflows/wasip1_wasm.yml'
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go
      uses: actions/setup-go@v4

    - name: Build go from tip
      uses: iwdgo/gotip-build@master
      id: gotip
      with:
        go_variables: GOOS=wasip1 GOARCH=wasm GOROOT_FINAL=/home/runner/work/gotip-build/gotip-build/go
        test_build: false

    - name: Install Go wasm
      run: |
        mv -f go/bin/${{ env.goos }}_${{ env.goarch }}/* go/bin/ # erase native build

    - name: Test using wasmruntime
      run: |
        curl https://wasmtime.dev/install.sh -sSf | bash
        export WASMTIME_HOME="$HOME/.wasmtime"
        echo $WASMTIME_HOME
        export PATH="$WASMTIME_HOME/bin:$PATH"
        echo $PATH
        # wasmtime help
        # Go config
        export GOWASIRUNTIME=wasmtime
        cd ./go/src
        ../misc/wasm/go_wasip1_wasm_exec ../bin/go env
        ../misc/wasm/go_wasip1_wasm_exec ../bin/go tool
        # Set up as run.bash
        export GO_TEST_TIMEOUT_SCALE=4
        export GOPROXY="https://proxy.golang.org,direct"
        export GOSUMDB="sum.golang.org"
        export GOENV=off
        eval $(../misc/wasm/go_wasip1_wasm_exec ../bin/go tool dist env)
        unset CDPATH	# in case user has it set
        export GOHOSTOS
        export CC
        export GOPATH=/nonexist-gopath
        # TODO Fails with go: RLock /home/runner/work/go-upon-ci/go-upon-ci/go/src/go.mod: unsupported operation
        # ../misc/wasm/go_wasip1_wasm_exec ../bin/go test ./...

    - name: Test using wazero
      if: false
      run: |
        curl https://wazero.io/install.sh | sh
        ls -l ./bin
        export PATH="$(pwd)/bin:$PATH"
        echo $PATH
        echo "wazero" $(wazero version)
        # Go config
        export GOWASIRUNTIME=wazero
        cd ./go/src
        ../misc/wasm/go_wasip1_wasm_exec ../bin/go env
        ../misc/wasm/go_wasip1_wasm_exec ../bin/go tool
        # Set up as run.bash
        export GO_TEST_TIMEOUT_SCALE=4
        export GOPROXY="https://proxy.golang.org,direct"
        export GOSUMDB="sum.golang.org"
        export GOENV=off
        eval $(../misc/wasm/go_wasip1_wasm_exec ../bin/go tool dist env)
        unset CDPATH	# in case user has it set
        export GOHOSTOS
        export CC
        export GOPATH=/nonexist-gopath
        #../misc/wasm/go_wasip1_wasm_exec ../bin/go test ./...

    - name: Test using wasmer
      run: |
        curl https://get.wasmer.io -sSfL | sh
        source /home/runner/.wasmer/wasmer.sh
        export GOWASIRUNTIME=wasmer
        wasmer -V
        wasmer config
        # Go config
        ls /home/runner/work/gotip-build/gotip-build/go
        cd ./go/src
        # go: cannot find GOROOT directory: /home/runner/work/gotip-build/gotip-build/go
        ../misc/wasm/go_wasip1_wasm_exec ../bin/go env
        ../misc/wasm/go_wasip1_wasm_exec ../bin/go tool
        # Set up as run.bash
        export GO_TEST_TIMEOUT_SCALE=4
        export GOPROXY="https://proxy.golang.org,direct"
        export GOSUMDB="sum.golang.org"
        export GOENV=off
        eval $(../misc/wasm/go_wasip1_wasm_exec ../bin/go tool dist env)
        unset CDPATH	# in case user has it set
        export GOHOSTOS
        export CC
        export GOPATH=/nonexist-gopath
        # ../misc/wasm/go_wasip1_wasm_exec ../bin/go test ./...

    - name: Upload go executable
      uses: actions/upload-artifact@v3
      if: ${{ env.crosscompile == 'true' }}
      with:
        name: gotip-${{ env.goos }}-${{ env.arch }}
        path: go/bin/
