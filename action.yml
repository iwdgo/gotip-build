name: 'Build Go from source on Windows'
description: 'Build and test Go from source code on Windows'
inputs:
  go_variables:
    description: 'Variables and their values ready for export'
    required: false
  test_build:
    description: 'When set to true, all tests of build are executed'
    required: false
    default: 'true'

runs:
  using: "composite"
  steps:
    - name: Clone master of go
      shell: powershell
      run: |
        git clone --depth=1 --branch master --single-branch --no-tags https://go.googlesource.com/go

    - name: Apply patch files
      shell: powershell
      run: |
        if (!(Test-Path *.patch -PathType leaf)) { echo "No patch file found. Skipping."; exit 0; }
        move *.patch .\go\src\
        cd go/src
        git config user.email "${{ github.event.pusher.email }}"
        git config user.name "${{ github.event.pusher.name }}"
        git am --ignore-space-change --ignore-whitespace --whitespace=fix $(dir *.patch).Name
        git show --stat -n $(Get-ChildItem *.patch).Count
        del .\*.patch

    - name: Build
      shell: powershell
      run: |
        cd go/src
        ${{ inputs.go_variables }}
        If (!(Test-Path variable:GOROOT_BOOTSTRAP)) { $GOROOT_BOOTSTRAP = "$(go env GOROOT)" }
        .\make.bat --no-banner --no-local
        ..\bin\go.exe version

    - name: Test
      shell: powershell
      if: ${{ inputs.test_build == 'true' }}
      run: |
        cd go/src
        .\run.bat --no-rebuild  --no-local


branding:
  icon: crosshair
  color: blue
